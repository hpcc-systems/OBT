#!/bin/bash

#
#------------------------------
#
# Imports (settings, functions)
#

# Git branch settings

. ./settings.sh

#
#------------------------------
#

PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }' 
#set -x

SOURCE_PATH=~/build/CE/platform/HPCC-Platform
BRANCH_ID=master

IS_SCL=$( type "scl" 2>&1 )

if [[ "${IS_SCL}" =~ "not found" ]]
then 
    printf "SCL is not installed.\n"
else 
    id=$( scl -l | grep -c 'devtoolset' )
    if [[ $id -ne 0 ]]
    then
        DEVTOOLSET=$(  scl -l | tail -n 1 )
        printf "%s is installed.\n" "${DEVTOOLSET}"
        . scl_source enable ${DEVTOOLSET}
        export CL_PATH=/opt/rh/${DEVTOOLSET}/root/usr;
    else
        printf "DEVTOOLSET is not installed.\n"
    fi
fi

GetCommitSha()
{
    #set -x
    TEST_DATE=$1
    SOURCE_DATE=$( date -I -d "$TEST_DATE - 1 day" )
    
    pushd ${SOURCE_PATH} > /dev/null

    # to restore whole commit tree
    git checkout -f ${BRANCH_ID} > /dev/null 2>&1
    

    sha=$( git rev-list -n 1 --before="$TEST_DATE 00:00" --merges  master --first-parent )
    until [[ -n "$sha" ]]
    do
        # step one day back
        SOURCE_DATE=$( date -I -d "$SOURCE_DATE - 1 day" )
        # Get SHA
        
        sha=$( git rev-list -n 1 --before="$TEST_DATE 00:00" --merges  master --first-parent )
    done

    # to restore whole commit tree
    git checkout -f ${BRANCH_ID} > /dev/null 2>&1

    
    popd > /dev/null
    #set +x

    sha=${sha:0:8}
    sha=${sha^^}
    
    echo $sha
}

TARGET_FILE="${PWD}/settings.inc"

direction="forward"
#direction="backward"

DAY_COUNT=0
DAY_SKIP=1

if [[ "$direction" == "forward" ]]
then
    # Forward
    FIRST_TEST_DATE="2020-06-24"
    LAST_TEST_DATE="2020-06-27"
    TEST_DATE=$FIRST_TEST_DATE
else
    #  Backward
    LAST_TEST_DATE="2017-08-27"
    FIRST_TEST_DATE="2017-08-21"
    TEST_DATE=$LAST_TEST_DATE
fi

printf "from %s to %s direction %s\n" "$FIRST_TEST_DATE" "$LAST_TEST_DATE" "$direction"

printf "Test date\tcommit\n"

# forward
until [[ "$TEST_DATE" > "$LAST_TEST_DATE" ]]
do 
    TEST_SHA=$( GetCommitSha "$TEST_DATE" )

    #printf "%s\t%s\n" "$TEST_DATE" "$TEST_SHA"

    export JOB_NAME_SUFFIX="#${TEST_SHA}"

    # create setting.inc with SHA
    printf "# Generated by $0 on %s\n" "$(date '+%Y-%m-%d %H:%M:%S')" > ${TARGET_FILE}
    printf "PERF_TEST_DATE=\"%s\"\n" "$TEST_DATE" >> ${TARGET_FILE}
    printf "SHA=%s\n" "$TEST_SHA" >> ${TARGET_FILE}
    printf "JOB_NAME_SUFFIX=\"--jobnamesuffix %s\"\n" "${TEST_SHA}" >> ${TARGET_FILE}
    
    cat ${TARGET_FILE}

    # Execute OBT with performance test
    ./obtMain.sh perf    

    # next test date
    if [[ "$direction" == "forward" ]]
    then
        TEST_DATE=$( date -I -d "$TEST_DATE + $DAY_SKIP day")
    else
        TEST_DATE=$( date -I -d "$TEST_DATE - $DAY_SKIP day")
    fi
    DAY_COUNT=$(( $DAY_COUNT + 1 ))
    
    printf "-----------------------------------------------------------------\n"

done

printf "day counts:%d\n" "$DAY_COUNT"

